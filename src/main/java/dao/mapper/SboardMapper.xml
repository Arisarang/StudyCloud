<?xml version="1.0" encoding="UTF-8"?>

<!-- 마이바티스 3 Mapper DTD -->
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
<mapper namespace="dao.face.SboardDao">
	<select id="selectCntAll" resultType="int">
		SELECT count(*) FROM studyboard
	</select>
	
	<select id="selectSboardHash" resultType="hashMap" parameterType="util.Paging">
		SELECT * FROM ( 
			SELECT rownum rnum, B.* FROM (
				SELECT s.study_no, s.member_no, s.study_title, s.study_people, s.study_address, s.study_tag, s.study_date, s.study_time
						,s.study_content, s.study_notify, s.enrollstudy_date, s.sboard_markcnt
						,m.member_id, m.member_nick
				FROM studyboard s 
				JOIN member m ON ( s.member_no = m.member_no ) ORDER BY s.study_no DESC 
			) B
		) STUDYMBOARD
		WHERE rnum between #{startNo } AND #{endNo }
	</select>
	
	<select id="detailPageBySboardNo" resultType="hashMap" parameterType="int">
		SELECT s.study_no, s.study_title, s.study_people, s.study_address, s.study_tag, s.study_date, s.study_time, s.study_content
				, s.study_notify, s.enrollstudy_date, s.sboard_markcnt, m.member_id, m.member_nick
		FROM studyboard s
		JOIN member m ON (s.member_no = m.member_no )
		WHERE study_no = #{studyNo }
	</select>
	
	<insert id="enroll" parameterType="dto.StudyBoard">
		<selectKey order="BEFORE" resultType="int" keyProperty="studyNo">
			SELECT studyboard_seq.nextval FROM dual
		</selectKey>
		INSERT INTO studyboard ( study_no, member_no, study_title, study_people, study_address, study_tag, study_date, study_time, study_content, study_notify)
		VALUES( ${studyNo }, #{memberNo }, #{studyTitle }, #{studyPeople }, #{studyAddress }, #{studyTag }, #{studyDate }, #{studyTime }, #{studyContent }, #{studyNotify } )
	</insert>
	
	<update id="update" parameterType="dto.StudyBoard">
		UPDATE studyboard
		SET study_title = #{studyTitle }, study_content = #{studyContent }, study_tag = #{studyTag }, study_people = #{studyPeople }
			, study_address = #{studyAddress }, study_date = #{studyDate }, study_time = #{studyTime }, study_notify = #{studyNotify }
		WHERE study_no = #{studyNo }
	</update>
	
	
	<delete id="delete" parameterType="dto.StudyBoard">
		DELETE studyboard
		WHERE study_no = #{studyNo }
	</delete>
	
	<select id="markcount" parameterType="dto.StudyMark" resultType="int">
	 	SELECT count(*) FROM studymark
	 	WHERE member_no = #{memberNo }
	 	AND study_no = #{studyNo }
	</select>
	
	<select id="insertMark" parameterType="dto.StudyMark">
		INSERT INTO studymark 
		VALUES ( studyMark_seq.nextval, #{studyNo }, #{memberNo } )
	</select>
	
	<select id="cancelMark" parameterType="dto.StudyMark">
		DELETE studymark 
		WHERE study_no = #{studyNo }
		AND member_no = #{memberNo }
	</select>
	
	<insert id="apply" parameterType="dto.ApplyStudy">
		<selectKey order="BEFORE" resultType="int" keyProperty="applystudyNo">
			SELECT applystudy_seq.nextval FROM dual
		</selectKey>
		INSERT INTO applystudy ( applystudy_no, member_no, member_name, member_age, member_job, member_address, member_intro, applystudy_date, study_no)
		VALUES( ${applystudyNo }, #{memberNo }, #{memberName }, #{memberAge }, #{memberJob }, #{memberAddress }, #{memberIntro }, sysdate, #{studyNo} )
	</insert>
	
	<select id="searchByKeyword" resultType="hashmap" parameterType="hashmap">
		SELECT * FROM studyboard
		WHERE 1=1
		<choose>
			<when test="category != null and category.equals('study_tag')">
				AND study_tag LIKE '%' || #{keyword } || '%'
			</when>
			
			<when test="category != null and category.equals('study_title')">
				AND study_title LIKE '%' || #{keyword } || '%'
			</when>
			
			<when test="category != null and category.equals('member_nick')">
				AND member_nick LIKE '%' || #{keyword } || '%'
			</when>
		</choose>	
	</select>
	
	</mapper>
