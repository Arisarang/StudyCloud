<?xml version="1.0" encoding="UTF-8"?>

<!-- 마이바티스 3 Mapper DTD -->
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
<mapper namespace="dao.face.admin.SroomDao_admin">

	<!-- 페이징 -->
	<select id="selectCntAll" resultType="int">
		SELECT count(*) FROM studyroom
	</select>
	
	<!-- 게시글 리스트 -->
	<select id="selectList" resultType="StudyRoom" parameterType="PagingVUp">
		SELECT * FROM (
			SELECT rownum rnum, S.* FROM (
				SELECT
					sroom_no, sroom_name, sroom_addr, sroom_price, sroom_people
					, sroom_intro, sroom_info, sroom_role
				FROM studyroom
				ORDER BY sroom_no DESC
			) S
		) STUDYROOM
		WHERE rnum BETWEEN #{startNo } AND #{endNo }
	</select>
	
 	<!-- 게시글 검색 -->
	<select id="searchName" resultType="hashmap" parameterType="hashmap">
		SELECT *
		FROM studyroom
		
		WHERE 1=1
		<choose>
			<when test="category != null and category.equals('sroom_name')">
				AND sroom_name LIKE '%' || #{keyword } || '%'
			</when>
		</choose>
		ORDER BY sroom_no DESC		
	</select>

    <!-- 게시글 등록 -->
    <insert id="insertsRoom" parameterType="StudyRoom">
    	<selectKey order="BEFORE" resultType="int" keyProperty="sRoomNo">
    		SELECT studyroom_seq.nextval FROM dual
    	</selectKey>
    
    	INSERT INTO studyroom ( sroom_no, sroom_name, sroom_addr, sroom_price, sroom_people, sroom_intro, sroom_info, sroom_role )
    	VALUES ( #{sRoomNo }, #{sRoomName }, #{sRoomAddr }, #{sRoomPrice }, #{sRoomPeople }, #{sRoomIntro }, #{sRoomInfo }, #{sRoomRole }  )
    </insert>
    
    <!-- 게시글 상세보기 -->
    <select id="selectStudyroom" resultType="StudyRoom" parameterType="StudyRoom">
		SELECT *
		FROM studyroom
		WHERE sroom_no = #{sRoomNo }
	</select>
	
	<!-- 첨부파일 불러오기 -->
	<select id="selectFileBySroomNo" resultType="FileUpload" parameterType="StudyRoom">
		SELECT *
		FROM fileupload
		WHERE sroom_no = #{sRoomNo }
	</select>
    
    <!-- 첨부파일 삽입 -->
    <insert id="insertFile" parameterType="FileUpload">
    	INSERT INTO fileupload ( fileupload_no, sroom_no, fileupload_ori, fileupload_stor )
    	VALUES ( fileupload_seq.nextval, #{sroomNo }, #{fileUploadOri }, #{fileUploadStor } )
    </insert>
    
    <!-- 게시글 수정 -->
    <update id="updateStudyroom" parameterType="StudyRoom">
    	UPDATE studyroom
    	SET sroom_name = #{sRoomName }
    		, sroom_addr = #{sRoomAddr }
    		, sroom_price = #{sRoomPrice }
    		, sroom_people = #{sRoomPeople }
    		, sroom_intro = #{sRoomIntro }
    		, sroom_info = #{sRoomInfo }
    		, sroom_role = #{sRoomRole }
    	WHERE sroom_no = #{sRoomNo }
    </update>
    
    <!-- QnA 삭제 -->
    <delete id="deleteQna" parameterType="StudyRoom">
		DELETE studyroomqna
		WHERE sroom_no = #{sRoomNo }	
	</delete>
    
    <!-- 예약정보 삭제 -->
    <delete id="deleteReserve" parameterType="StudyRoom">
		DELETE reservation
		WHERE sroom_no = #{sRoomNo }	
	</delete>
    
    <!-- 리뷰 삭제 -->
    <delete id="deleteReview" parameterType="StudyRoom">
    	DELETE sroomreview
    	WHERE sroom_no = #{sRoomNo }
    </delete>
    
    <!-- 첨부파일 삭제 -->
    <delete id="deleteFile" parameterType="StudyRoom">
		DELETE fileupload
		WHERE sroom_no = #{sRoomNo }	
	</delete>
	
	<!-- 게시글 삭제 -->
	<delete id="delete" parameterType="StudyRoom">
		DELETE studyroom
		WHERE sroom_no = #{sRoomNo }
	</delete>
	
	
	<!-- ========== QnA ========== -->
	
	<!-- 페이징 -->
	<select id="selectCntQna" resultType="int">
		SELECT count(*) FROM studyroomqna
	</select>
	
	<!-- 스터디룸 QnA 리스트 -->
	<select id="qnaList" resultType="hashmap" parameterType="PagingVUp">
		SELECT * FROM (
			SELECT rownum rnum, B.* FROM (
				SELECT
					Q.sroomqna_no, Q.sroomqna_title, Q.sroomqna_content, Q.sroomqna_date
					, Q.sroomqna_grpno, Q.sroomqna_grpord, Q.sroomqna_step
					, S.sroom_no, S.sroom_name
					, M.member_no, M.member_nick, M.member_id
				FROM studyroomqna Q
				JOIN studyroom S
				ON Q.sroom_no = S.sroom_no
				JOIN member M
				ON Q.member_no = M.member_no
				ORDER BY sroomqna_grpno DESC, sroomqna_grpord ASC, sroomqna_no DESC
			) B
		) studyroomqna
		WHERE rnum BETWEEN #{startNo } AND #{endNo }
	</select>

	<!-- QnA 상세보기 -->
	<select id="selectQnaView" resultType="SroomQna" parameterType="SroomQna">
		SELECT *
		FROM studyroomqna
		WHERE sroomqna_no = #{sRoomQnaNo }
		ORDER BY sroomqna_no DESC
	</select>
	
	<!-- QnA 답변 작성 -->
	<insert id="writeQna" parameterType="SroomQna">
    	<selectKey order="BEFORE" resultType="int" keyProperty="sRoomQnaGrpOrd">
    		SELECT max(sroomqna_grpord) + 1 FROM studyroomqna WHERE sroomqna_grpno = #{sRoomQnaNo}
    	</selectKey>
		
    	INSERT INTO studyroomqna ( sroomqna_no, sroom_no, member_no, sroomqna_grpno, sroomqna_grpord, sroomqna_step, sroomqna_title, sroomqna_content )
    	VALUES ( studyroomqna_seq.nextval, #{sRoomNo}, #{memberNo}, #{sRoomQnaNo}, #{sRoomQnaGrpOrd }, 1, #{sRoomQnaTitle }, #{sRoomQnaContent } )
   	</insert>
	
	<!-- ========== 관리자 메인페이지 ========== -->

	<!-- QnA 게시글 목록 미리보기 -->
	<select id="previewQna" resultType="hashmap">
		SELECT * FROM (
		SELECT rownum rnum, B.* FROM (
			SELECT
				Q.sroomqna_no, Q.sroomqna_title, Q.sroomqna_content, Q.sroomqna_date
				, Q.sroomqna_grpno, Q.sroomqna_grpord, Q.sroomqna_step
				, S.sroom_no, S.sroom_name
				, M.member_no, M.member_nick, M.member_id
			FROM studyroomqna Q
			JOIN studyroom S
			ON Q.sroom_no = S.sroom_no
			JOIN member M
			ON Q.member_no = M.member_no
			ORDER BY sroomqna_grpno DESC, sroomqna_grpord ASC, sroomqna_no DESC
			) B
		) STUDYROOMQNA
		<![CDATA[WHERE rnum <= 5]]> 
	</select>
	
	<!-- ========== 메인페이지 ========== -->
	
	<!-- 스터디룸 목록 -->
	<select id="srlist" resultType="StudyRoom" parameterType="StudyRoom">
		SELECT *
		FROM studyroom
	</select>
	
	<!-- 게시글 + 첨부파일 조회 -->
	<select id="selectMap" resultType="hashmap">
		SELECT S.sroom_name, S.sroom_no, F.fileupload_stor
		FROM studyroom S
		JOIN fileupload F
		ON S.sroom_no = F.sroom_no
		<![CDATA[WHERE rownum <= 6]]>
		ORDER BY S.sroom_no DESC
	</select>
	
	
	
</mapper>