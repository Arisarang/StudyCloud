<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"https://mybatis.org/dtd/mybatis-3-mapper.dtd">
	
<mapper namespace="dao.face.FreeBoardDao">

	<select id="countBoard" resultType="int">
		select count(*) from freeboard
	</select>

	<select id="getListWithPaging" resultType="hashmap" parameterType="util.Paging">
		SELECT * FROM (
			SELECT rownum rnum, B.* from ( 
				SELECT f.fboard_no, nvl(c.ccnt, 0) ccnt, f.category_name, f.fboard_title, m.member_nick, f.fboard_hit, f.fboard_date
				FROM freeBoard f LEFT OUTER JOIN (
                    SELECT count(commt_no) ccnt, fBoard_no FROM commt
                    GROUP BY fBoard_no) c
                ON f.fBoard_no = c.fBoard_no 
                LEFT OUTER JOIN member m
                ON f.member_no = m.member_no                   
                GROUP BY f.fboard_no, ccnt, f.category_name, f.fboard_title, m.member_nick, f.fboard_hit, f.fboard_date
                order by f.fboard_no desc
				) B
			) freeBoard
		where rnum BETWEEN #{startNo} AND #{endNo}	 
	</select>
	
	<update id="plusHit" parameterType="int">
		UPDATE freeboard set fBoard_hit = fBoard_hit+1
		where fboard_no = #{fBoardNo}
	</update>
	
	<select id="ViewfBoardByfBoardNo" resultType="hashmap" parameterType="int">
		select f.fboard_no, f.category_name, m.member_nick, m.member_no, f.fboard_date, f.fboard_hit, f.fboard_title, f.fboard_content 
		from freeBoard f
		join member m ON ( f.member_no = m.member_no )
		where fboard_no = #{fBoardNo}
	</select> 	
	
	<insert id="fBoardInsert" parameterType="dto.FreeBoard">
		<selectKey order="BEFORE" resultType="int" keyProperty="fBoardNo">
			SELECT freeBoard_seq.nextval FROM dual
		</selectKey>
	
		INSERT INTO freeBoard( fboard_no, category_name, fboard_title, fboard_content, member_no, fboard_date )
		VALUES( #{fBoardNo}, #{categoryName}, #{fBoardTitle}, #{fBoardContent}, #{memberNo}, sysdate )
	</insert>
	
	<insert id="insertFile" parameterType="dto.FileUpload">
		INSERT INTO fileUpload ( fileUpload_no, fboard_no, fileUpload_ori, fileUpload_stor )
		VALUES ( fileUpload_seq.nextval, #{fBoardNo}, #{fileUploadOri}, #{fileUploadStor} )
	</insert>
	
	<select id="selectFileByfBoardNo" parameterType="int" resultType="dto.FileUpload">
		SELECT fileUpload_no, fboard_no, fileUpload_ori, fileUpload_stor 
		FROM fileUpload
		WHERE fboard_no = #{fBoardNo}
	</select>
	
 	<select id="selectUploadFileByFileNo" parameterType="dto.FileUpload" resultType="dto.FileUpload">
		SELECT fileupload_no, fboard_no, fileupload_ori, fileupload_stor 
		FROM fileupload
		WHERE fileupload_no = #{fileUploadNo}
	</select> 
	 
 	<update id="updateFreeBoard" parameterType="dto.FreeBoard">
		UPDATE freeBoard SET fBoard_title = #{fBoardTitle}
			, fBoard_content = #{fBoardContent}
			, category_name = #{categoryName}
		WHERE fboard_no = #{fBoardNo}
	</update> 
	
	<delete id="deleteFile" parameterType="dto.FreeBoard">
		DELETE fileUpload WHERE fBoard_no = #{fBoardNo }
	</delete>
	
	<delete id="deleteByfBoardNo" parameterType="dto.FreeBoard">
		DELETE freeBoard WHERE fBoard_no = #{fBoardNo }
	</delete>
	
	<delete id="deleteComtByFboardNo" parameterType="dto.FreeBoard">
		DELETE Commt WHERE fBoard_no = #{fBoardNo }
	</delete>
	
	<select id="detailFile" parameterType="dto.FreeBoard" resultType="dto.FileUpload">
		SELECT fileupload_no, fboard_no, fileupload_ori, fileupload_stor 
		FROM fileupload
		WHERE fileupload_no = #{fBoardNo}
	</select>
	
	<select id="countBoardCmt" parameterType="int" resultType="int">
		select count(*) from commt where fBoard_no=#{fBoardNo}
	</select>
	
	<select id="getfBoardCmtList" parameterType="Map" resultType="hashmap">
		SELECT * FROM (
			SELECT rownum rnum, B.* FROM ( 
				SELECT c.commt_no, c.fboard_no, c.member_no, m.member_nick, c.commt_content, c.commt_date
				FROM commt c
                JOIN member m ON ( c.member_no = m.member_no )
                WHERE fBoard_no=#{fBoardNo}
				ORDER BY commt_no desc
				) B
			) commt
		WHERE rnum BETWEEN #{startNo} AND #{endNo}
	</select>
	 
	<insert id="insertCmtfBoard" parameterType="dto.Commt">
		INSERT INTO commt( commt_no, fboard_no, member_no, commt_content, commt_date )
		VALUES( commt_seq.nextval, #{fBoardNo}, #{memberNo}, #{commtContent}, sysdate)
		
 		<selectKey order="AFTER" resultType="int" keyProperty="commtNo">
			SELECT commt_seq.CURRVAL FROM dual
		</selectKey> 
	</insert> 
	
	<select id="selectCmtByCmtNo" parameterType="int" resultType="dto.Commt">
		SELECT commt_no, fBoard_no, member_no, commt_content, commt_date
		FROM commt WHERE commt_no = #{commtNo}
	</select>
	
	<update id="updateCmtfBoard" parameterType="dto.Commt">
		UPDATE commt SET commt_content = #{commtContent}
			, commt_date = sysdate			
		WHERE commt_no = #{commtNo}
	</update>
	
	<delete id="deleteCmtfBoard" parameterType="int">
		DELETE commt WHERE commt_no = #{commtNo }
	</delete>
	
	<select id="getfBoardSearchList" parameterType="hashMap" resultType="hashmap">
		SELECT * from (
			SELECT rownum rnum, B.* from (
				SELECT f.fboard_no, f.category_name, f.fboard_title, m.member_nick, f.fboard_hit, f.fboard_date
				FROM freeboard f
				JOIN member m ON ( f.member_no = m.member_no )
			WHERE
			<foreach collection="list" item="list" separator="AND">
				<choose>
					<when test="list == 'fBoardTitle'.toString()">
						f.fBoard_title like '%'||#{keyword}||'%'
					</when>
					<when test="list == 'fBoardContent'.toString()">
						f.fBoard_content like '%'||#{keyword}||'%'
					</when>
<!-- 					<when test="list == 'fBoardTitle'.toString() and list == 'fBoardContent'.toString()">
					f.fBoard_title like '%'||#{keyword}||'%'
					AND f.fBoard_content like '%'||#{keyword}||'%'
					</when> -->
					<when test="list == 'memberNo'.toString()">
						m.member_nick like '%'||#{keyword}||'%'
					</when>
				</choose>
			</foreach>
			ORDER BY fboard_no desc ) B
		) FreeBoard
	WHERE rnum BETWEEN #{startNo} AND #{endNo}	
	</select>
	
	<select id="countSearchList" resultType="int">
		SELECT count(*) 
		FROM freeboard f
		JOIN  member m ON (f.member_no = m.member_no)
		WHERE
		<foreach collection="list" item="list" separator="AND">
			<choose>
				<when test="list == 'fBoardTitle'.toString()">
					f.fBoard_title like '%'||#{keyword}||'%'
				</when>
				<when test="list == 'fBoardContent'.toString()">
					f.fBoard_content like '%'||#{keyword}||'%'
				</when>				
				<when test="list == 'memberNo'.toString()">
					m.member_nick like '%'||#{keyword}||'%'
				</when>
			</choose>
		</foreach>
	</select>
	
	<select id="getNickByMemberNo" parameterType="int" resultType="String">
		select member_nick from member where member_no = #{memberNo}
	</select>
	
	

</mapper>
